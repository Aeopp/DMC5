
			const Matrix Mat = SpTransform->GetRenderMatrix();
			const uint32 RangeEnd = Inner->m_spVertexLocations->size() - 1u;
			const uint32 JumpOffset = 25u;

			const float AllParticleLifeTime = 4.f;
			{
				auto _PlayableParticle = ParticleSystem::GetInstance()->PlayableParticles("Ice", AllParticleLifeTime);
				for (int32 i = 0; i < _PlayableParticle.size(); i += JumpOffset)
				{
					auto& _PlayInstance = _PlayableParticle[i];

					Vector2 Range{ -0.1f,0.1f };
					const Vector3& TargetLocation =
						FMath::Mul((*Inner->m_spVertexLocations)[FMath::Random(0u, RangeEnd)], Mat);
					const Vector3 Cp0 = TargetLocation + FMath::Random<Vector3>({ Range.x ,Range.x,Range.x },
						{ Range.y,Range.y,Range.y });
					const Vector3 Cp1 = Cp0 + FMath::Random<Vector3>({ Range.x ,Range.x,Range.x }, { Range.y,Range.y,Range.y });
					const Vector3 End = Cp1 + FMath::Random<Vector3>({ Range.x ,Range.x,Range.x }, { Range.y,Range.y,Range.y });

					Vector2 ScaleRange{ 0.1f,0.18f };
					const float PScale = FMath::Random(ScaleRange.x, ScaleRange.y) * GScale;

					const Vector3 StartRot = {
						FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f) };

					const Vector3 RotCp0 = {
						FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f) };

					const Vector3 RotCp1 = {
						FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f) };

					const Vector3 EndRot = {
						FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f),FMath::Random(-360.f,360.f) };

					ParticleInstance::Ice _IceValue{};

					_IceValue.ColorIntencity = FMath::Random(0.05f, 0.2f);

					const float LifeTime = FMath::Random(1.f, AllParticleLifeTime);

					_PlayInstance->PlayDescBind(
						{ TargetLocation ,Cp0,Cp1,End },
						{ StartRot ,RotCp0,RotCp1,EndRot },
						{ PScale,PScale,PScale }, LifeTime, 0.0f, _IceValue);
				}
			}