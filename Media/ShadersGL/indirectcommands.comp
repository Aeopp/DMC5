
#version 430

struct DrawElementsIndirectCommand {
	uint count;
	uint instanceCount;
	uint firstIndex;
	uint baseVertex;
	uint baseInstance;
};

layout(std430, binding = 0) writeonly buffer IndirectCommands {
	DrawElementsIndirectCommand data[3];
} commands;

layout(std430, binding = 1) writeonly buffer ParameterBuffer {
	int count;
} numIndirectCommands;

layout(location = 2) uniform float time;
layout(location = 3) uniform uvec4 params;

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main()
{
	float localtime = mod(time, 3.0);
	int count = 3;

	if (localtime < 1.0)
		count = 1;
	else if (localtime < 2.0)
		count = 2;

	uint maxnuminstances = (params.w / 3);
	float freq1 = sin(time * 2.0) * 0.5 + 0.5;
	float freq2 = cos(time * 4.0) * 0.5 + 0.5;
	float freq3 = (sin(time) + cos(time)) * 0.3535533 + 0.5;

	uint numinstances1 = uint(freq1 * float(maxnuminstances));
	uint numinstances2 = uint(freq2 * float(maxnuminstances));
	uint numinstances3 = uint(freq3 * float(maxnuminstances));

	commands.data[0].count			= params.x;
	commands.data[0].instanceCount	= numinstances1;
	commands.data[0].firstIndex		= 0;
	commands.data[0].baseVertex		= 0;
	commands.data[0].baseInstance	= 0;

	commands.data[1].count			= params.y;
	commands.data[1].instanceCount	= numinstances2;
	commands.data[1].firstIndex		= params.x;
	commands.data[1].baseVertex		= 0;
	commands.data[1].baseInstance	= maxnuminstances + 1;

	commands.data[2].count			= params.z;
	commands.data[2].instanceCount	= numinstances3;
	commands.data[2].firstIndex		= params.x + params.y;
	commands.data[2].baseVertex		= 0;
	commands.data[2].baseInstance	= 2 * maxnuminstances + 1;

	numIndirectCommands.count = count;
}
